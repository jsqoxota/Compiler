<package,	key>
<test,	id>
<;,	otherOp>
<public,	key>
<class,	key>
<test1,	id>
<{,	delimiter>
<public,	key>
<static,	key>
<void,	key>
<main,	id>
<(,	bracket>
<String,	id>
<[,	bracket>
<],	bracket>
<args,	id>
<),	bracket>
<{,	delimiter>
<int,	key>
<a,	id>
<=,	assOp>
<0,	num>
<,,	otherOp>
<b,	id>
<=,	assOp>
<100,	num>
<;,	otherOp>
<a,	id>
<=,	assOp>
<a,	id>
<+,	ariOp>
<b,	id>
<;,	otherOp>
<a,	id>
<+=,	assOp>
<b,	id>
<;,	otherOp>
<a,	id>
<=,	assOp>
<a,	id>
<-,	ariOp>
<b,	id>
<;,	otherOp>
<a,	id>
<-=,	assOp>
<b,	id>
<;,	otherOp>
<a,	id>
<=,	assOp>
<a,	id>
<*,	ariOp>
<b,	id>
<;,	otherOp>
<a,	id>
<*=,	assOp>
<b,	id>
<;,	otherOp>
<a,	id>
<=,	assOp>
<a,	id>
</,	ariOp>
<b,	id>
<;,	otherOp>
<a,	id>
</=,	assOp>
<b,	id>
<;,	otherOp>
<a,	id>
<=,	assOp>
<a,	id>
<%,	ariOp>
<b,	id>
<;,	otherOp>
<a,	id>
<%=,	assOp>
<b,	id>
<;,	otherOp>
<a,	id>
<++,	ariOp>
<;,	otherOp>
<b,	id>
<--,	ariOp>
<;,	otherOp>
<a,	id>
<=,	assOp>
<a,	id>
<|,	bitOp>
<b,	id>
<;,	otherOp>
<a,	id>
<|=,	assOp>
<b,	id>
<;,	otherOp>
<a,	id>
<=,	assOp>
<a,	id>
<&,	bitOp>
<b,	id>
<;,	otherOp>
<a,	id>
<&=,	assOp>
<b,	id>
<;,	otherOp>
<a,	id>
<=,	assOp>
<a,	id>
<^,	bitOp>
<b,	id>
<;,	otherOp>
<a,	id>
<^=,	assOp>
<b,	id>
<;,	otherOp>
<a,	id>
<=,	assOp>
<~,	bitOp>
<b,	id>
<;,	otherOp>
<a,	id>
<=,	assOp>
<a,	id>
<<<,	bitOp>
<b,	id>
<;,	otherOp>
<a,	id>
<<<=,	assOp>
<b,	id>
<;,	otherOp>
<a,	id>
<=,	assOp>
<a,	id>
<>>,	bitOp>
<b,	id>
<;,	otherOp>
<a,	id>
<>>=,	assOp>
<b,	id>
<;,	otherOp>
<a,	id>
<=,	assOp>
<a,	id>
<<<<,	bitOp>
<b,	id>
<;,	otherOp>
<a,	id>
<>>>=,	assOp>
<b,	id>
<;,	otherOp>
<if,	key>
<(,	bracket>
<a,	id>
<>,	relOp>
<b,	id>
<&&,	logicOp>
<a,	id>
<==,	relOp>
<b,	id>
<||,	logicOp>
<a,	id>
<>=,	relOp>
<b,	id>
<),	bracket>
<;,	otherOp>
<if,	key>
<(,	bracket>
<a,	id>
<<,	relOp>
<b,	id>
<&&,	logicOp>
<!,	logicOp>
<(,	bracket>
<a,	id>
<<=,	relOp>
<b,	id>
<),	bracket>
<||,	logicOp>
<a,	id>
<!=,	relOp>
<b,	id>
<),	bracket>
<;,	otherOp>
<boolean,	key>
<f,	id>
<=,	assOp>
<false,	key>
<;,	otherOp>
<a,	id>
<=,	assOp>
<f,	id>
<?,	otherOp>
<1,	num>
<:,	otherOp>
<4,	num>
<;,	otherOp>
<System,	id>
<.,	otherOp>
<out,	id>
<.,	otherOp>
<println,	id>
<(,	bracket>
<a,	id>
<),	bracket>
<;,	otherOp>
<},	delimiter>
<},	delimiter>
